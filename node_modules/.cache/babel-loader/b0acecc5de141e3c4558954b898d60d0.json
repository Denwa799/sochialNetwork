{"ast":null,"code":"import React from \"react\";\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: newMessageBody => {\n      dispatch(addMessageActionCreator(newMessageBody));\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Dialogs);","map":{"version":3,"sources":["/home/denwa/projects/sochialNetwork/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","addMessageActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogs","dialogsPage","messages","mapDispatchToProps","dispatch","addMessage","newMessageBody"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,QAAsC,6BAAtC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD,OADxB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,WAAN,CAAkBC;AAFzB,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAGC,cAAD,IAAoB;AAC5BF,MAAAA,QAAQ,CAACX,uBAAuB,CAACa,cAAD,CAAxB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeT,OAAO,CAClBF,OAAO,CAACG,eAAD,EAAkBK,kBAAlB,CADW,CAAP,CAEbT,OAFa,CAAf","sourcesContent":["import React from \"react\";\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n)(Dialogs);"]},"metadata":{},"sourceType":"module"}