{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  usersId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = data.data;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/home/denwa/projects/sochialNetwork/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","usersId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","userId","getAuthUserData","dispatch","me","then","resultCode","id"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,IADM;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAYA,OAAO,MAAMI,eAAe,GAAG,CAACC,MAAD,EAAST,KAAT,EAAgBC,KAAhB,MAA2B;AAACK,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,IAAI,EAAE;AAACE,IAAAA,MAAD;AAAST,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA5B,CAA3B,CAAxB;AAEP,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/Cf,EAAAA,OAAO,CAACgB,EAAR,GAAaC,IAAb,CAAkBN,IAAI,IAAI;AACtB,QAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvB,UAAI;AAACC,QAAAA,EAAD;AAAKf,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAqBM,IAAI,CAACA,IAA9B;AACAI,MAAAA,QAAQ,CAACH,eAAe,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,eAAeE,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    usersId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            };\n        default:\n            return state;\n    }\n}\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}});\n\nexport const getAuthUserData = () => (dispatch) => {\n    authAPI.me().then(data => {\n        if (data.resultCode === 0) {\n            let {id, email, login} = data.data;\n            dispatch(setAuthUserData(id, email, login));\n        }\n    });\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}