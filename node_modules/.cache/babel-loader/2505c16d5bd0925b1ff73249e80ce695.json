{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hello',\n    likeCount: '5'\n  }, {\n    id: 2,\n    message: 'Hello',\n    likeCount: '10'\n  }, {\n    id: 3,\n    message: 'How are you',\n    likeCount: '11'\n  }, {\n    id: 4,\n    message: 'I\\'m fine',\n    likeCount: '100'\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: '5',\n        message: action.newPostText,\n        likeCount: '0'\n      };\n      return { ...state,\n        posts: [...state.posts, newPost]\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => dispatch => {\n  profileAPI.getProfile(userId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(data => {\n    dispatch(setStatus(data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/denwa/projects/sochialNetwork/src/redux/profile-reducer.js"],"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likeCount","profile","status","profileReducer","state","action","type","newPost","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hello', likeCount: '5'},\n        {id: 2, message: 'Hello', likeCount: '10'},\n        {id: 3, message: 'How are you', likeCount: '11'},\n        {id: 4, message: 'I\\'m fine', likeCount: '100'}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: '5',\n                message: action.newPostText,\n                likeCount: '0'\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    profileAPI.getProfile(userId).then(data => {\n        dispatch(setUserProfile(data));\n    });\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId).then(data => {\n        dispatch(setStatus(data));\n    });\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status).then(data => {\n        if (data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    });\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}